<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2021/08/01/%E6%90%AD%E5%BB%BA%E7%AE%80%E7%95%A5%E7%89%88%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2021/08/01/%E6%90%AD%E5%BB%BA%E7%AE%80%E7%95%A5%E7%89%88%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>@<a href="%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B">TOC</a></p><h1 id="创建github账户，创建github仓库"><a href="#创建github账户，创建github仓库" class="headerlink" title="创建github账户，创建github仓库"></a>创建github账户，创建github仓库</h1><h1 id="建立连接，本地与github"><a href="#建立连接，本地与github" class="headerlink" title="建立连接，本地与github"></a>建立连接，本地与github</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>下载，安装git之后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开cmd就可以</span><br><span class="line">git config --global user.name &quot;firstname lastname&quot;</span><br><span class="line">git config --global user.email &quot;youemail@gmail.com&quot;</span><br></pre></td></tr></table></figure><h2 id="本地创建密钥"><a href="#本地创建密钥" class="headerlink" title="本地创建密钥"></a>本地创建密钥</h2><p>创建密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;youremail@gmail.com </span><br></pre></td></tr></table></figure><p>最后这个密钥会保存在某个文件下<br>c盘/用户/用户名/.ssh/id_rsa下</p><h2 id="粘贴该密钥至github"><a href="#粘贴该密钥至github" class="headerlink" title="粘贴该密钥至github"></a>粘贴该密钥至github</h2><p>库—setting—ssh与GPG keys下，输入密钥名称（自己造一个）和之前那个密钥文件下的所有内容<br>注是加那个.pub的<br>然后git bash下，ssh -T <a href="mailto:&#103;&#x69;&#x74;&#64;&#103;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#111;&#109;">&#103;&#x69;&#x74;&#64;&#103;&#105;&#x74;&#104;&#117;&#98;&#x2e;&#99;&#111;&#109;</a></p><h1 id="下载github-desktop-把创建的仓库克隆至本地的某个文件夹下"><a href="#下载github-desktop-把创建的仓库克隆至本地的某个文件夹下" class="headerlink" title="下载github desktop,把创建的仓库克隆至本地的某个文件夹下"></a>下载github desktop,把创建的仓库克隆至本地的某个文件夹下</h1><h1 id="安装node-js-先去官网下载安装包，安装node-js，再安装npm"><a href="#安装node-js-先去官网下载安装包，安装node-js，再安装npm" class="headerlink" title="安装node.js ,先去官网下载安装包，安装node.js，再安装npm"></a>安装node.js ,先去官网下载安装包，安装node.js，再安装npm</h1><p>然后用命令行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v  //查看是否安装好了node.js</span><br><span class="line">npm -v  //查看是否安装好了npm</span><br></pre></td></tr></table></figure><h1 id="安装hexo-和本地预览博客"><a href="#安装hexo-和本地预览博客" class="headerlink" title="安装hexo 和本地预览博客"></a>安装hexo 和本地预览博客</h1><p>在你之前克隆的仓库存储的本地文件的目录下，右键 git bash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  //安装hexo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">中间出现时</span><br><span class="line">OpenSSL SSL_read: Connection was reset, errno 10054</span><br><span class="line"></span><br><span class="line">输 </span><br><span class="line">git config --global http.sslVerify &quot;false&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hexo init //初始化该文件夹</span><br><span class="line">  </span><br><span class="line"> hexo new xxxx //创建一个新页面</span><br><span class="line"></span><br><span class="line">hexo g  </span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>然后可以打开浏览器<br>localhost:4000 //在本地上预览博客</p><p>ctrl+c可退出</p><h2 id="网页预览博客"><a href="#网页预览博客" class="headerlink" title="网页预览博客"></a>网页预览博客</h2><p>根目录下的_config.yml是站点配置文件<br> themes中的_config.yml是主题配置文件</p><p>为了让hexo和github关联起来，站点配置文件<br>ctrl+f 搜索deploy<br>配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: 仓库的路径 （是咋写的忘了）git@github.com:umli0/umli0.github.io.git</span><br><span class="line">有个说要写成上面那样</span><br><span class="line">很多就是直接仓库地址</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>然后保存<br>然后安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">hexo clean </span><br><span class="line"></span><br><span class="line">hexo g </span><br><span class="line"></span><br><span class="line">hexo d  //部署网站</span><br><span class="line">然后就可以打开网站了xxx.github.io</span><br></pre></td></tr></table></figure><h2 id="然后可以更换主题"><a href="#然后可以更换主题" class="headerlink" title="然后可以更换主题"></a>然后可以更换主题</h2><p>克隆主题至目录下themes下的next文件夹下<br>然后是配置主题文件<br><a href="https://juejin.cn/post/6844903780056563726#heading-5">https://juejin.cn/post/6844903780056563726#heading-5</a><br><a href="https://juejin.cn/post/6844903780056563726#heading-5">https://juejin.cn/post/6844903780056563726#heading-5</a><br>链接: <a href="https://juejin.cn/post/6844903780056563726#heading-5">配置方法</a>.</p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">博客的本地目录下---git bash--用命令 git clone https://github.com/theme-next/hexo-theme-next themes/next   将想要下载的主题下载下来（这个是旋律NexT主题）</span><br><span class="line">先下载好主题再换，如果先更改了主题，你会发现好像主题下不下来</span><br><span class="line">更改站点的</span><br><span class="line">theme: landscape</span><br><span class="line">改为你新下的主题</span><br><span class="line"></span><br><span class="line">连接的时候报错了</span><br><span class="line">fatal: unable to access &#x27;https://github.com/theme-next/hexo-theme-next/&#x27;: Failed to connect to github.com port 443: Timed out</span><br><span class="line"></span><br><span class="line">是说超时了吗，可以再重新输入一次命令</span><br><span class="line"></span><br><span class="line">成功后</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">进入站点配置文件，配置theme: next</span><br><span class="line"></span><br><span class="line">回到根目录 git bash </span><br><span class="line">hexo s --debug</span><br><span class="line">然后本地预览查看是否无误</span><br></pre></td></tr></table></figure><p>（成功了啊啊啊）<br>然后输入生成和发布命令，在网站上预览结果<br>好像是空白<br>但是按ctrl+f5多几次就可以运行了<br>ok完结</p><p>最后可以在本地预览到博客<br>网页也可以预览，但是网页预览到的页面是空白什么都没有</p><h3 id="解决问题时发现，本地的分支是main，但是之前设置的都是master，但是github仓库中有master分支，但是本地没有"><a href="#解决问题时发现，本地的分支是main，但是之前设置的都是master，但是github仓库中有master分支，但是本地没有" class="headerlink" title="解决问题时发现，本地的分支是main，但是之前设置的都是master，但是github仓库中有master分支，但是本地没有"></a>解决问题时发现，本地的分支是main，但是之前设置的都是master，但是github仓库中有master分支，但是本地没有</h3><p>所有试试看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git branch  --查看分支</span><br><span class="line">git branch -a --查看所有分支</span><br><span class="line">git branch 分支名 --创建新的分支</span><br><span class="line">git checkout 分支名 --切换分支</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2021/08/01/git%E4%B8%8A%E4%BC%A0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2021/08/01/git%E4%B8%8A%E4%BC%A0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="git上传仓库至github出现的问题"><a href="#git上传仓库至github出现的问题" class="headerlink" title="git上传仓库至github出现的问题"></a>git上传仓库至github出现的问题</h1><p>@(git)[上传仓库]<br>[TOC]</p><h2 id="git上传文件至github时出现的问题"><a href="#git上传文件至github时出现的问题" class="headerlink" title="git上传文件至github时出现的问题"></a>git上传文件至github时出现的问题</h2><blockquote><p>$ git push -u origin master</p></blockquote><p>fatal: unable to access ‘<a href="https://github.com/****/****.github.io.git/&#39;">https://github.com/****/****.github.io.git/&#39;</a>: Failed to connect to 127.0.0.1 port 1080: Connection refused</p><h3 id="打开本地命令行"><a href="#打开本地命令行" class="headerlink" title="- 打开本地命令行"></a>- <strong>打开本地命令行</strong></h3><h3 id="到放置仓库的文件目录下"><a href="#到放置仓库的文件目录下" class="headerlink" title="- 到放置仓库的文件目录下"></a>- <strong>到放置仓库的文件目录下</strong></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l // git config --list 命令来列出Git可以在该处找到的所有的设置</span><br></pre></td></tr></table></figure><p>出现了这样一条</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http.proxy=127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>再用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --local --unset http.proxy  //关闭这个代理</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //检查发现关了</span><br></pre></td></tr></table></figure><h3 id="再回到放置仓库的目录下，打开git-bash"><a href="#再回到放置仓库的目录下，打开git-bash" class="headerlink" title="- 再回到放置仓库的目录下，打开git bash"></a>- <strong>再回到放置仓库的目录下，打开git bash</strong></h3><p>然后就跳出来登录的窗口</p><h2 id="但是还没完，因为有出现了新的问题"><a href="#但是还没完，因为有出现了新的问题" class="headerlink" title="但是还没完，因为有出现了新的问题"></a>但是还没完，因为有出现了新的问题</h2><p>再提交文件时</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;xxxxx&quot;</span><br></pre></td></tr></table></figure><blockquote><p>On branch master<br>Your branch is up to date with ‘origin/master’.</p><p>Changes not staged for commit:<br>(use “git add <file>…” to update what will be<br>committed)<br>(use “git restore <file>…” to discard changes in<br>working directory)<br>        modified:   _config.yml<br>…..</p></blockquote><p>然后我就试着按它说的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add _config.yml</span><br></pre></td></tr></table></figure><p>然后就可以了输</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;112&quot;</span><br></pre></td></tr></table></figure><p>不报错了，即提交代码成功了</p><h2 id="但是没想到啊，push-origin时又报错了"><a href="#但是没想到啊，push-origin时又报错了" class="headerlink" title="但是没想到啊，push origin时又报错了"></a>但是没想到啊，push origin时又报错了</h2><blockquote><p>fatal: unable to access ‘<a href="https://xxxxxxxx&/#39;">https://xxxxxxxx&#39;</a>: OpenSSL SSL_read: Connection was reset, errno 10054</p></blockquote><p>mmp</p><h2 id="然后又又又出现了一个新的问题"><a href="#然后又又又出现了一个新的问题" class="headerlink" title="然后又又又出现了一个新的问题"></a>然后又又又出现了一个新的问题</h2><p><img src="https://c-ssl.duitang.com/uploads/item/201902/19/20190219090734_kQTmz.gif"></p><blockquote><p>git push<br>remote: Permission to xxxxx.git denied to xxxx.<br>fatal: unable to access ‘<a href="https://github.com/xxxxxHEXO-HHC-BLOG.git/&#39;">https://github.com/xxxxxHEXO-HHC-BLOG.git/&#39;</a>: The requested URL returned error: 403</p></blockquote><p>博客是别人的模板，然后居然莫名其妙变成了要往别人仓库传送，也不知道是在哪里配置的，之前还是传到自己的仓库的</p><p>[git命令](git命令 “<a href="https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8" title="git 命令">https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8</a>链接</p><blockquote><p>git remote -v  //显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL。</p><p>origin  <a href="https://github.com/xxxxxx.git">https://github.com/xxxxxx.git</a> (fetch)</p></blockquote><blockquote><p>origin  <a href="https://github.com/xxxxxx.git">https://github.com/xxxxxx.git</a> (push)</p></blockquote><p>查看了一下,然后都成了别人的地址</p><p><img src="https://c-ssl.duitang.com/uploads/item/201511/21/20151121203420_Rmhen.jpeg"></p><h3 id="删除那个地址，然后添加自己的地址"><a href="#删除那个地址，然后添加自己的地址" class="headerlink" title="删除那个地址，然后添加自己的地址"></a>删除那个地址，然后添加自己的地址</h3><blockquote><p>git remote remove origin  //删除</p><p>git remote add origin <a href="https://xxx/">https://xxx</a>  //添加</p></blockquote><blockquote><p>git remote -v  //检查</p></blockquote><h3 id="好，让我们再试一次"><a href="#好，让我们再试一次" class="headerlink" title="好，让我们再试一次"></a>好，让我们再试一次</h3><blockquote><p>git push</p></blockquote><blockquote><p>fatal: The current branch master has no upstream branch.<br>To push the current branch and set the remote as upstream, use</p></blockquote><blockquote><p>git push –set-upstream origin master</p></blockquote><p>又出现问题了，好吧，按它说的做</p><blockquote><p>git push –set-upstream origin master</p></blockquote><p>fatal: unable to access ‘<a href="https://xxxxxx&/#39;">https://xxxxxx&#39;</a>: OpenSSL SSL_read: Connection was reset, errno 10054</p><p><img src="https://c-ssl.duitang.com/uploads/blog/202011/18/20201118133405_8091e.jpg"><br>好嘛，又回到上一个问题</p><p><a href="%E5%8F%82%E8%80%83" title="https://www.jianshu.com/p/86adb5e6bbfc">参考</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin master</span><br><span class="line">$ git push origin master</span><br><span class="line"></span><br><span class="line">fatal: unable to access <span class="string">&#x27;https://xxxxx&#x27;</span>: OpenSSL SSL_read: Connection was reset, errno <span class="number">10054</span></span><br><span class="line"></span><br><span class="line">$ git config --<span class="keyword">global</span> http.sslVerify <span class="string">&quot;false&quot;</span></span><br><span class="line"></span><br><span class="line">$ git push origin master</span><br><span class="line">Enumerating objects: <span class="number">3</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), <span class="number">227</span> <span class="built_in">bytes</span> | <span class="number">113.00</span> KiB/s, done.</span><br><span class="line">Total <span class="number">2</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>), pack-reused <span class="number">0</span></span><br><span class="line">To https://github.com/umli0/umli0.github.io.git</span><br><span class="line">   5730d42..fedf201  master -&gt; master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
